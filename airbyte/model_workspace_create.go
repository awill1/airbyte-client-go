/*
Airbyte Configuration API

Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Change Management: * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create` * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests. * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):   * Adding fields to request or response bodies.   * Adding new HTTP endpoints. * All `web_backend` APIs are not considered public APIs and are not guaranteeing backwards compatibility. 

API version: 1.0.0
Contact: contact@airbyte.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package airbyte

import (
	"encoding/json"
)

// WorkspaceCreate struct for WorkspaceCreate
type WorkspaceCreate struct {
	Email *string `json:"email,omitempty"`
	AnonymousDataCollection *bool `json:"anonymousDataCollection,omitempty"`
	Name string `json:"name"`
	News *bool `json:"news,omitempty"`
	SecurityUpdates *bool `json:"securityUpdates,omitempty"`
	Notifications []Notification `json:"notifications,omitempty"`
	DisplaySetupWizard *bool `json:"displaySetupWizard,omitempty"`
}

// NewWorkspaceCreate instantiates a new WorkspaceCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceCreate(name string) *WorkspaceCreate {
	this := WorkspaceCreate{}
	this.Name = name
	return &this
}

// NewWorkspaceCreateWithDefaults instantiates a new WorkspaceCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceCreateWithDefaults() *WorkspaceCreate {
	this := WorkspaceCreate{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *WorkspaceCreate) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *WorkspaceCreate) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *WorkspaceCreate) SetEmail(v string) {
	o.Email = &v
}

// GetAnonymousDataCollection returns the AnonymousDataCollection field value if set, zero value otherwise.
func (o *WorkspaceCreate) GetAnonymousDataCollection() bool {
	if o == nil || o.AnonymousDataCollection == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousDataCollection
}

// GetAnonymousDataCollectionOk returns a tuple with the AnonymousDataCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetAnonymousDataCollectionOk() (*bool, bool) {
	if o == nil || o.AnonymousDataCollection == nil {
		return nil, false
	}
	return o.AnonymousDataCollection, true
}

// HasAnonymousDataCollection returns a boolean if a field has been set.
func (o *WorkspaceCreate) HasAnonymousDataCollection() bool {
	if o != nil && o.AnonymousDataCollection != nil {
		return true
	}

	return false
}

// SetAnonymousDataCollection gets a reference to the given bool and assigns it to the AnonymousDataCollection field.
func (o *WorkspaceCreate) SetAnonymousDataCollection(v bool) {
	o.AnonymousDataCollection = &v
}

// GetName returns the Name field value
func (o *WorkspaceCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkspaceCreate) SetName(v string) {
	o.Name = v
}

// GetNews returns the News field value if set, zero value otherwise.
func (o *WorkspaceCreate) GetNews() bool {
	if o == nil || o.News == nil {
		var ret bool
		return ret
	}
	return *o.News
}

// GetNewsOk returns a tuple with the News field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetNewsOk() (*bool, bool) {
	if o == nil || o.News == nil {
		return nil, false
	}
	return o.News, true
}

// HasNews returns a boolean if a field has been set.
func (o *WorkspaceCreate) HasNews() bool {
	if o != nil && o.News != nil {
		return true
	}

	return false
}

// SetNews gets a reference to the given bool and assigns it to the News field.
func (o *WorkspaceCreate) SetNews(v bool) {
	o.News = &v
}

// GetSecurityUpdates returns the SecurityUpdates field value if set, zero value otherwise.
func (o *WorkspaceCreate) GetSecurityUpdates() bool {
	if o == nil || o.SecurityUpdates == nil {
		var ret bool
		return ret
	}
	return *o.SecurityUpdates
}

// GetSecurityUpdatesOk returns a tuple with the SecurityUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetSecurityUpdatesOk() (*bool, bool) {
	if o == nil || o.SecurityUpdates == nil {
		return nil, false
	}
	return o.SecurityUpdates, true
}

// HasSecurityUpdates returns a boolean if a field has been set.
func (o *WorkspaceCreate) HasSecurityUpdates() bool {
	if o != nil && o.SecurityUpdates != nil {
		return true
	}

	return false
}

// SetSecurityUpdates gets a reference to the given bool and assigns it to the SecurityUpdates field.
func (o *WorkspaceCreate) SetSecurityUpdates(v bool) {
	o.SecurityUpdates = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *WorkspaceCreate) GetNotifications() []Notification {
	if o == nil || o.Notifications == nil {
		var ret []Notification
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetNotificationsOk() ([]Notification, bool) {
	if o == nil || o.Notifications == nil {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *WorkspaceCreate) HasNotifications() bool {
	if o != nil && o.Notifications != nil {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []Notification and assigns it to the Notifications field.
func (o *WorkspaceCreate) SetNotifications(v []Notification) {
	o.Notifications = v
}

// GetDisplaySetupWizard returns the DisplaySetupWizard field value if set, zero value otherwise.
func (o *WorkspaceCreate) GetDisplaySetupWizard() bool {
	if o == nil || o.DisplaySetupWizard == nil {
		var ret bool
		return ret
	}
	return *o.DisplaySetupWizard
}

// GetDisplaySetupWizardOk returns a tuple with the DisplaySetupWizard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceCreate) GetDisplaySetupWizardOk() (*bool, bool) {
	if o == nil || o.DisplaySetupWizard == nil {
		return nil, false
	}
	return o.DisplaySetupWizard, true
}

// HasDisplaySetupWizard returns a boolean if a field has been set.
func (o *WorkspaceCreate) HasDisplaySetupWizard() bool {
	if o != nil && o.DisplaySetupWizard != nil {
		return true
	}

	return false
}

// SetDisplaySetupWizard gets a reference to the given bool and assigns it to the DisplaySetupWizard field.
func (o *WorkspaceCreate) SetDisplaySetupWizard(v bool) {
	o.DisplaySetupWizard = &v
}

func (o WorkspaceCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.AnonymousDataCollection != nil {
		toSerialize["anonymousDataCollection"] = o.AnonymousDataCollection
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.News != nil {
		toSerialize["news"] = o.News
	}
	if o.SecurityUpdates != nil {
		toSerialize["securityUpdates"] = o.SecurityUpdates
	}
	if o.Notifications != nil {
		toSerialize["notifications"] = o.Notifications
	}
	if o.DisplaySetupWizard != nil {
		toSerialize["displaySetupWizard"] = o.DisplaySetupWizard
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceCreate struct {
	value *WorkspaceCreate
	isSet bool
}

func (v NullableWorkspaceCreate) Get() *WorkspaceCreate {
	return v.value
}

func (v *NullableWorkspaceCreate) Set(val *WorkspaceCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceCreate(val *WorkspaceCreate) *NullableWorkspaceCreate {
	return &NullableWorkspaceCreate{value: val, isSet: true}
}

func (v NullableWorkspaceCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


