/*
Airbyte Configuration API

Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Change Management: * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create` * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests. * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):   * Adding fields to request or response bodies.   * Adding new HTTP endpoints. * All `web_backend` APIs are not considered public APIs and are not guaranteeing backwards compatibility. 

API version: 1.0.0
Contact: contact@airbyte.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package airbyte

import (
	"encoding/json"
)

// AttemptFailureSummary struct for AttemptFailureSummary
type AttemptFailureSummary struct {
	Failures []AttemptFailureReason `json:"failures"`
	// True if the number of committed records for this attempt was greater than 0. False if 0 records were committed. If not set, the number of committed records is unknown.
	PartialSuccess *bool `json:"partialSuccess,omitempty"`
}

// NewAttemptFailureSummary instantiates a new AttemptFailureSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttemptFailureSummary(failures []AttemptFailureReason) *AttemptFailureSummary {
	this := AttemptFailureSummary{}
	this.Failures = failures
	return &this
}

// NewAttemptFailureSummaryWithDefaults instantiates a new AttemptFailureSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttemptFailureSummaryWithDefaults() *AttemptFailureSummary {
	this := AttemptFailureSummary{}
	return &this
}

// GetFailures returns the Failures field value
func (o *AttemptFailureSummary) GetFailures() []AttemptFailureReason {
	if o == nil {
		var ret []AttemptFailureReason
		return ret
	}

	return o.Failures
}

// GetFailuresOk returns a tuple with the Failures field value
// and a boolean to check if the value has been set.
func (o *AttemptFailureSummary) GetFailuresOk() ([]AttemptFailureReason, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Failures, true
}

// SetFailures sets field value
func (o *AttemptFailureSummary) SetFailures(v []AttemptFailureReason) {
	o.Failures = v
}

// GetPartialSuccess returns the PartialSuccess field value if set, zero value otherwise.
func (o *AttemptFailureSummary) GetPartialSuccess() bool {
	if o == nil || o.PartialSuccess == nil {
		var ret bool
		return ret
	}
	return *o.PartialSuccess
}

// GetPartialSuccessOk returns a tuple with the PartialSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttemptFailureSummary) GetPartialSuccessOk() (*bool, bool) {
	if o == nil || o.PartialSuccess == nil {
		return nil, false
	}
	return o.PartialSuccess, true
}

// HasPartialSuccess returns a boolean if a field has been set.
func (o *AttemptFailureSummary) HasPartialSuccess() bool {
	if o != nil && o.PartialSuccess != nil {
		return true
	}

	return false
}

// SetPartialSuccess gets a reference to the given bool and assigns it to the PartialSuccess field.
func (o *AttemptFailureSummary) SetPartialSuccess(v bool) {
	o.PartialSuccess = &v
}

func (o AttemptFailureSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["failures"] = o.Failures
	}
	if o.PartialSuccess != nil {
		toSerialize["partialSuccess"] = o.PartialSuccess
	}
	return json.Marshal(toSerialize)
}

type NullableAttemptFailureSummary struct {
	value *AttemptFailureSummary
	isSet bool
}

func (v NullableAttemptFailureSummary) Get() *AttemptFailureSummary {
	return v.value
}

func (v *NullableAttemptFailureSummary) Set(val *AttemptFailureSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAttemptFailureSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAttemptFailureSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttemptFailureSummary(val *AttemptFailureSummary) *NullableAttemptFailureSummary {
	return &NullableAttemptFailureSummary{value: val, isSet: true}
}

func (v NullableAttemptFailureSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttemptFailureSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


