/*
Airbyte Configuration API

Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Change Management: * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create` * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests. * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):   * Adding fields to request or response bodies.   * Adding new HTTP endpoints. * All `web_backend` APIs are not considered public APIs and are not guaranteeing backwards compatibility. 

API version: 1.0.0
Contact: contact@airbyte.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package airbyte

import (
	"encoding/json"
)

// ResourceRequirements optional resource requirements to run workers (blank for unbounded allocations)
type ResourceRequirements struct {
	CpuRequest *string `json:"cpu_request,omitempty"`
	CpuLimit *string `json:"cpu_limit,omitempty"`
	MemoryRequest *string `json:"memory_request,omitempty"`
	MemoryLimit *string `json:"memory_limit,omitempty"`
}

// NewResourceRequirements instantiates a new ResourceRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRequirements() *ResourceRequirements {
	this := ResourceRequirements{}
	return &this
}

// NewResourceRequirementsWithDefaults instantiates a new ResourceRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRequirementsWithDefaults() *ResourceRequirements {
	this := ResourceRequirements{}
	return &this
}

// GetCpuRequest returns the CpuRequest field value if set, zero value otherwise.
func (o *ResourceRequirements) GetCpuRequest() string {
	if o == nil || o.CpuRequest == nil {
		var ret string
		return ret
	}
	return *o.CpuRequest
}

// GetCpuRequestOk returns a tuple with the CpuRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRequirements) GetCpuRequestOk() (*string, bool) {
	if o == nil || o.CpuRequest == nil {
		return nil, false
	}
	return o.CpuRequest, true
}

// HasCpuRequest returns a boolean if a field has been set.
func (o *ResourceRequirements) HasCpuRequest() bool {
	if o != nil && o.CpuRequest != nil {
		return true
	}

	return false
}

// SetCpuRequest gets a reference to the given string and assigns it to the CpuRequest field.
func (o *ResourceRequirements) SetCpuRequest(v string) {
	o.CpuRequest = &v
}

// GetCpuLimit returns the CpuLimit field value if set, zero value otherwise.
func (o *ResourceRequirements) GetCpuLimit() string {
	if o == nil || o.CpuLimit == nil {
		var ret string
		return ret
	}
	return *o.CpuLimit
}

// GetCpuLimitOk returns a tuple with the CpuLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRequirements) GetCpuLimitOk() (*string, bool) {
	if o == nil || o.CpuLimit == nil {
		return nil, false
	}
	return o.CpuLimit, true
}

// HasCpuLimit returns a boolean if a field has been set.
func (o *ResourceRequirements) HasCpuLimit() bool {
	if o != nil && o.CpuLimit != nil {
		return true
	}

	return false
}

// SetCpuLimit gets a reference to the given string and assigns it to the CpuLimit field.
func (o *ResourceRequirements) SetCpuLimit(v string) {
	o.CpuLimit = &v
}

// GetMemoryRequest returns the MemoryRequest field value if set, zero value otherwise.
func (o *ResourceRequirements) GetMemoryRequest() string {
	if o == nil || o.MemoryRequest == nil {
		var ret string
		return ret
	}
	return *o.MemoryRequest
}

// GetMemoryRequestOk returns a tuple with the MemoryRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRequirements) GetMemoryRequestOk() (*string, bool) {
	if o == nil || o.MemoryRequest == nil {
		return nil, false
	}
	return o.MemoryRequest, true
}

// HasMemoryRequest returns a boolean if a field has been set.
func (o *ResourceRequirements) HasMemoryRequest() bool {
	if o != nil && o.MemoryRequest != nil {
		return true
	}

	return false
}

// SetMemoryRequest gets a reference to the given string and assigns it to the MemoryRequest field.
func (o *ResourceRequirements) SetMemoryRequest(v string) {
	o.MemoryRequest = &v
}

// GetMemoryLimit returns the MemoryLimit field value if set, zero value otherwise.
func (o *ResourceRequirements) GetMemoryLimit() string {
	if o == nil || o.MemoryLimit == nil {
		var ret string
		return ret
	}
	return *o.MemoryLimit
}

// GetMemoryLimitOk returns a tuple with the MemoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRequirements) GetMemoryLimitOk() (*string, bool) {
	if o == nil || o.MemoryLimit == nil {
		return nil, false
	}
	return o.MemoryLimit, true
}

// HasMemoryLimit returns a boolean if a field has been set.
func (o *ResourceRequirements) HasMemoryLimit() bool {
	if o != nil && o.MemoryLimit != nil {
		return true
	}

	return false
}

// SetMemoryLimit gets a reference to the given string and assigns it to the MemoryLimit field.
func (o *ResourceRequirements) SetMemoryLimit(v string) {
	o.MemoryLimit = &v
}

func (o ResourceRequirements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CpuRequest != nil {
		toSerialize["cpu_request"] = o.CpuRequest
	}
	if o.CpuLimit != nil {
		toSerialize["cpu_limit"] = o.CpuLimit
	}
	if o.MemoryRequest != nil {
		toSerialize["memory_request"] = o.MemoryRequest
	}
	if o.MemoryLimit != nil {
		toSerialize["memory_limit"] = o.MemoryLimit
	}
	return json.Marshal(toSerialize)
}

type NullableResourceRequirements struct {
	value *ResourceRequirements
	isSet bool
}

func (v NullableResourceRequirements) Get() *ResourceRequirements {
	return v.value
}

func (v *NullableResourceRequirements) Set(val *ResourceRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRequirements(val *ResourceRequirements) *NullableResourceRequirements {
	return &NullableResourceRequirements{value: val, isSet: true}
}

func (v NullableResourceRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


