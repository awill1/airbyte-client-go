/*
Airbyte Configuration API

Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Change Management: * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create` * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests. * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):   * Adding fields to request or response bodies.   * Adding new HTTP endpoints. * All `web_backend` APIs are not considered public APIs and are not guaranteeing backwards compatibility. 

API version: 1.0.0
Contact: contact@airbyte.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package airbyte

import (
	"encoding/json"
)

// DestinationDefinitionIdRequestBody struct for DestinationDefinitionIdRequestBody
type DestinationDefinitionIdRequestBody struct {
	DestinationDefinitionId string `json:"destinationDefinitionId"`
}

// NewDestinationDefinitionIdRequestBody instantiates a new DestinationDefinitionIdRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationDefinitionIdRequestBody(destinationDefinitionId string) *DestinationDefinitionIdRequestBody {
	this := DestinationDefinitionIdRequestBody{}
	this.DestinationDefinitionId = destinationDefinitionId
	return &this
}

// NewDestinationDefinitionIdRequestBodyWithDefaults instantiates a new DestinationDefinitionIdRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationDefinitionIdRequestBodyWithDefaults() *DestinationDefinitionIdRequestBody {
	this := DestinationDefinitionIdRequestBody{}
	return &this
}

// GetDestinationDefinitionId returns the DestinationDefinitionId field value
func (o *DestinationDefinitionIdRequestBody) GetDestinationDefinitionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationDefinitionId
}

// GetDestinationDefinitionIdOk returns a tuple with the DestinationDefinitionId field value
// and a boolean to check if the value has been set.
func (o *DestinationDefinitionIdRequestBody) GetDestinationDefinitionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestinationDefinitionId, true
}

// SetDestinationDefinitionId sets field value
func (o *DestinationDefinitionIdRequestBody) SetDestinationDefinitionId(v string) {
	o.DestinationDefinitionId = v
}

func (o DestinationDefinitionIdRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destinationDefinitionId"] = o.DestinationDefinitionId
	}
	return json.Marshal(toSerialize)
}

type NullableDestinationDefinitionIdRequestBody struct {
	value *DestinationDefinitionIdRequestBody
	isSet bool
}

func (v NullableDestinationDefinitionIdRequestBody) Get() *DestinationDefinitionIdRequestBody {
	return v.value
}

func (v *NullableDestinationDefinitionIdRequestBody) Set(val *DestinationDefinitionIdRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationDefinitionIdRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationDefinitionIdRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationDefinitionIdRequestBody(val *DestinationDefinitionIdRequestBody) *NullableDestinationDefinitionIdRequestBody {
	return &NullableDestinationDefinitionIdRequestBody{value: val, isSet: true}
}

func (v NullableDestinationDefinitionIdRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationDefinitionIdRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


