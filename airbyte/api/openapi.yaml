openapi: 3.0.0
info:
  contact:
    email: contact@airbyte.io
  description: |
    Airbyte Configuration API
    [https://airbyte.io](https://airbyte.io).

    This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.

    Here are some conventions that this API follows:
    * All endpoints are http POST methods.
    * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.
    * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.
    * For all `update` methods, the whole object must be passed in, even the fields that did not change.

    Change Management:
    * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create`
    * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests.
    * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):
      * Adding fields to request or response bodies.
      * Adding new HTTP endpoints.
    * All `web_backend` APIs are not considered public APIs and are not guaranteeing backwards compatibility.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Airbyte Configuration API
  version: 1.0.0
externalDocs:
  description: Find out more about Airbyte
  url: https://airbyte.io
servers:
- url: http://localhost:8000/api
security:
- {}
tags:
- description: Workspace related resources.
  name: workspace
- description: SourceDefinition related resources.
  name: source_definition
- description: SourceDefinition specification related resources.
  name: source_definition_specification
- description: Source related resources.
  name: source
- description: DestinationDefinition related resources.
  name: destination_definition
- description: DestinationDefinitionSpecification related resources.
  name: destination_definition_specification
- description: Destination related resources.
  name: destination
- description: Connection between sources and destinations.
  name: connection
- description: OAuth related resources to delegate access from user.
  name: oauth
- description: Database migration related resources.
  name: db_migration
- description: |
    Endpoints for the Airbyte web application. Those APIs should not be called outside the web application implementation and are not
    guaranteeing any backwards compatibility.
  name: web_backend
- description: Healthchecks
  name: health
- description: Export/Import Airbyte Configuration and Database resources.
  name: deployment
paths:
  /v1/workspaces/create:
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a workspace
      tags:
      - workspace
  /v1/workspaces/delete:
    post:
      operationId: deleteWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Deletes a workspace
      tags:
      - workspace
  /v1/workspaces/list:
    post:
      operationId: listWorkspaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
          description: Successful operation
      summary: List all workspaces registered in the current Airbyte deployment
      tags:
      - workspace
  /v1/workspaces/get:
    post:
      operationId: getWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by ID
      tags:
      - workspace
  /v1/workspaces/get_by_slug:
    post:
      operationId: getWorkspaceBySlug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlugRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by slug
      tags:
      - workspace
  /v1/workspaces/update:
    post:
      operationId: updateWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update workspace state
      tags:
      - workspace
  /v1/workspaces/update_name:
    post:
      operationId: updateWorkspaceName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateName'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update workspace name
      tags:
      - workspace
  /v1/workspaces/tag_feedback_status_as_done:
    post:
      operationId: updateWorkspaceFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGiveFeedback'
        required: true
      responses:
        "204":
          description: The feedback state has been properly updated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: Update workspace feedback state
      tags:
      - workspace
  /v1/notifications/try:
    post:
      operationId: tryNotificationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Try sending a notifications
      tags:
      - notifications
  /v1/source_definitions/create:
    post:
      operationId: createSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a sourceDefinition
      tags:
      - source_definition
  /v1/source_definitions/update:
    post:
      operationId: updateSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a sourceDefinition
      tags:
      - source_definition
  /v1/source_definitions/list:
    post:
      operationId: listSourceDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List all the sourceDefinitions the current Airbyte deployment is configured
        to use
      tags:
      - source_definition
  /v1/source_definitions/list_latest:
    post:
      description: Guaranteed to retrieve the latest information on supported sources.
      operationId: listLatestSourceDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List the latest sourceDefinitions Airbyte supports
      tags:
      - source_definition
  /v1/source_definitions/get:
    post:
      operationId: getSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get source
      tags:
      - source_definition
  /v1/source_definitions/delete:
    post:
      operationId: deleteSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a source definition
      tags:
      - source_definition
  /v1/source_definition_specifications/get:
    post:
      operationId: getSourceDefinitionSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionSpecificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get specification for a SourceDefinition.
      tags:
      - source_definition_specification
  /v1/sources/create:
    post:
      operationId: createSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a source
      tags:
      - source
  /v1/sources/update:
    post:
      operationId: updateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a source
      tags:
      - source
  /v1/sources/list:
    post:
      description: List sources for workspace. Does not return deleted sources.
      operationId: listSourcesForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List sources for workspace
      tags:
      - source
  /v1/sources/get:
    post:
      operationId: getSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get source
      tags:
      - source
  /v1/sources/search:
    post:
      operationId: searchSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search sources
      tags:
      - source
  /v1/sources/delete:
    post:
      operationId: deleteSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a source
      tags:
      - source
  /v1/sources/check_connection:
    post:
      operationId: checkConnectionToSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection to the source
      tags:
      - source
  /v1/sources/check_connection_for_update:
    post:
      operationId: checkConnectionToSourceForUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection for a proposed update to a source
      tags:
      - source
  /v1/sources/discover_schema:
    post:
      operationId: discoverSchemaForSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Discover the schema catalog of the source
      tags:
      - source
  /v1/destination_definitions/create:
    post:
      operationId: createDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a destinationsDefinition
      tags:
      - destination_definition
  /v1/destination_definitions/update:
    post:
      operationId: updateDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update destinationDefinition
      tags:
      - destination_definition
  /v1/destination_definitions/list:
    post:
      operationId: listDestinationDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List all the destinationDefinitions the current Airbyte deployment
        is configured to use
      tags:
      - destination_definition
  /v1/destination_definitions/list_latest:
    post:
      description: Guaranteed to retrieve the latest information on supported destinations.
      operationId: listLatestDestinationDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List the latest destinationDefinitions Airbyte supports
      tags:
      - destination_definition
  /v1/destination_definitions/get:
    post:
      operationId: getDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get destinationDefinition
      tags:
      - destination_definition
  /v1/destination_definitions/delete:
    post:
      operationId: deleteDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a destination definition
      tags:
      - destination_definition
  /v1/destination_definition_specifications/get:
    post:
      operationId: getDestinationDefinitionSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionSpecificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get specification for a destinationDefinition
      tags:
      - destination_definition_specification
  /v1/destinations/create:
    post:
      operationId: createDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a destination
      tags:
      - destination
  /v1/destinations/update:
    post:
      operationId: updateDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a destination
      tags:
      - destination
  /v1/destinations/list:
    post:
      operationId: listDestinationsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List configured destinations for a workspace
      tags:
      - destination
  /v1/destinations/get:
    post:
      operationId: getDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get configured destination
      tags:
      - destination
  /v1/destinations/search:
    post:
      operationId: searchDestinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search destinations
      tags:
      - destination
  /v1/destinations/check_connection:
    post:
      operationId: checkConnectionToDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection to the destination
      tags:
      - destination
  /v1/destinations/check_connection_for_update:
    post:
      operationId: checkConnectionToDestinationForUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection for a proposed update to a destination
      tags:
      - destination
  /v1/destinations/delete:
    post:
      operationId: deleteDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete the destination
      tags:
      - destination
  /v1/connections/create:
    post:
      operationId: createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a connection between a source and a destination
      tags:
      - connection
  /v1/connections/update:
    post:
      operationId: updateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a connection
      tags:
      - connection
  /v1/connections/list:
    post:
      description: List connections for workspace. Does not return deleted connections.
      operationId: listConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all connections for a workspace.
      tags:
      - connection
  /v1/connections/list_all:
    post:
      description: List connections for workspace, including deleted connections.
      operationId: listAllConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all connections for a workspace, including deleted connections.
      tags:
      - connection
  /v1/connections/get:
    post:
      operationId: getConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a connection
      tags:
      - connection
  /v1/state/get:
    post:
      operationId: getState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Fetch the current state for a connection.
      tags:
      - connection
  /v1/connections/search:
    post:
      operationId: searchConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search connections
      tags:
      - connection
  /v1/connections/delete:
    post:
      operationId: deleteConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a connection
      tags:
      - connection
  /v1/connections/sync:
    post:
      operationId: syncConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Trigger a manual sync of the connection
      tags:
      - connection
  /v1/connections/reset:
    post:
      operationId: resetConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Reset the data for the connection. Deletes data generated by the connection
        in the destination. Resets any cursors back to initial state.
      tags:
      - connection
  /v1/operations/check:
    post:
      operationId: checkOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckOperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check if an operation to be created is valid
      tags:
      - operation
  /v1/operations/create:
    post:
      operationId: createOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create an operation to be applied as part of a connection pipeline
      tags:
      - operation
  /v1/operations/update:
    post:
      operationId: updateOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update an operation
      tags:
      - operation
  /v1/operations/list:
    post:
      description: List operations for connection.
      operationId: listOperationsForConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all operations for a connection.
      tags:
      - operation
  /v1/operations/get:
    post:
      operationId: getOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns an operation
      tags:
      - operation
  /v1/operations/delete:
    post:
      operationId: deleteOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete an operation
      tags:
      - operation
  /v1/scheduler/sources/check_connection:
    post:
      operationId: executeSourceCheckConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run check connection for a given source configuration
      tags:
      - scheduler
  /v1/scheduler/sources/discover_schema:
    post:
      operationId: executeSourceDiscoverSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run discover schema for a given source a source configuration
      tags:
      - scheduler
  /v1/scheduler/destinations/check_connection:
    post:
      operationId: executeDestinationCheckConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCoreConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run check connection for a given destination configuration
      tags:
      - scheduler
  /v1/db_migrations/list:
    post:
      operationId: listMigrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbMigrationRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbMigrationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List all database migrations
      tags:
      - db_migration
  /v1/db_migrations/migrate:
    post:
      operationId: executeMigrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbMigrationRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbMigrationExecutionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Migrate the database to the latest version
      tags:
      - db_migration
  /v1/source_oauths/oauth_params/create:
    post:
      operationId: setInstancewideSourceOauthParams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideSourceOauthParamsRequestBody'
        required: true
      responses:
        "200":
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownExceptionInfo'
          description: Exception occurred; see message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Sets instancewide variables to be used for the oauth flow when creating this source. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.
      tags:
      - oauth
  /v1/source_oauths/get_consent_url:
    post:
      operationId: getSourceOAuthConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceOauthConsentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a source connector definition ID, return the URL to the consent
        screen where to redirect the user to.
      tags:
      - oauth
  /v1/source_oauths/complete_oauth:
    post:
      operationId: completeSourceOAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSourceOauthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a source def ID generate an access/refresh token etc.
      tags:
      - oauth
  /v1/destination_oauths/get_consent_url:
    post:
      operationId: getDestinationOAuthConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationOauthConsentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a destination connector definition ID, return the URL to the
        consent screen where to redirect the user to.
      tags:
      - oauth
  /v1/destination_oauths/complete_oauth:
    post:
      operationId: completeDestinationOAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteDestinationOAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a destination def ID generate an access/refresh token etc.
      tags:
      - oauth
  /v1/destination_oauths/oauth_params/create:
    post:
      operationId: setInstancewideDestinationOauthParams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideDestinationOauthParamsRequestBody'
        required: true
      responses:
        "200":
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownExceptionInfo'
          description: Exception occurred; see message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Sets instancewide variables to be used for the oauth flow when creating this destination. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.
      tags:
      - oauth
  /v1/web_backend/connections/list:
    post:
      operationId: webBackendListConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all non-deleted connections for a workspace.
      tags:
      - web_backend
  /v1/web_backend/connections/list_all:
    post:
      operationId: webBackendListAllConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all connections for a workspace.
      tags:
      - web_backend
  /v1/web_backend/connections/get:
    post:
      operationId: webBackendGetConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a connection
      tags:
      - web_backend
  /v1/web_backend/connections/create:
    post:
      operationId: webBackendCreateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a connection
      tags:
      - web_backend
  /v1/web_backend/connections/update:
    post:
      operationId: webBackendUpdateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a connection
      tags:
      - web_backend
  /v1/web_backend/connections/search:
    post:
      operationId: webBackendSearchConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search connections
      tags:
      - web_backend
  /v1/jobs/list:
    post:
      operationId: listJobsFor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns recent jobs for a connection. Jobs are returned in descending
        order by createdAt.
      tags:
      - jobs
  /v1/jobs/get:
    post:
      operationId: getJobInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get information about a job
      tags:
      - jobs
  /v1/jobs/cancel:
    post:
      operationId: cancelJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Cancels a job
      tags:
      - jobs
  /v1/jobs/get_debug_info:
    post:
      operationId: getJobDebugInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDebugInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Gets all information needed to debug this job
      tags:
      - jobs
  /v1/health:
    get:
      operationId: getHealthCheck
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckRead'
          description: Successful operation
      security: []
      summary: Health Check
      tags:
      - health
  /v1/logs/get:
    post:
      operationId: getLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsRequestBody'
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns the log file
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get logs
      tags:
      - logs
  /v1/openapi:
    get:
      operationId: getOpenApiSpec
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns the openapi specification file
      summary: Returns the openapi specification
      tags:
      - openapi
  /v1/deployment/export:
    post:
      operationId: exportArchive
      responses:
        "200":
          content:
            application/x-gzip:
              schema:
                $ref: '#/components/schemas/AirbyteArchive'
          description: Successful operation
      summary: Export Airbyte Configuration and Data Archive
      tags:
      - deployment
  /v1/deployment/import:
    post:
      operationId: importArchive
      requestBody:
        content:
          application/x-gzip:
            schema:
              $ref: '#/components/schemas/AirbyteArchive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRead'
          description: Successful operation
      summary: Import Airbyte Configuration and Data Archive
      tags:
      - deployment
  /v1/deployment/export_workspace:
    post:
      operationId: exportWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/x-gzip:
              schema:
                $ref: '#/components/schemas/AirbyteArchive'
          description: Successful operation
      summary: Export Airbyte Workspace Configuration
      tags:
      - deployment
  /v1/deployment/upload_archive_resource:
    post:
      operationId: uploadArchiveResource
      requestBody:
        content:
          application/x-gzip:
            schema:
              $ref: '#/components/schemas/AirbyteArchive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadRead'
          description: Successful operation
      summary: Upload a GZIP archive tarball and stage it in the server's cache as
        a temporary resource
      tags:
      - deployment
  /v1/deployment/import_into_workspace:
    post:
      operationId: importIntoWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Import Airbyte Configuration into Workspace (this operation might change ids of imported configurations). Note, in order to use this api endpoint, you might need to upload a temporary archive resource with 'deployment/upload_archive_resource' first
      tags:
      - deployment
components:
  responses:
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
      description: Object with given id was not found.
    InvalidInputResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidInputExceptionInfo'
      description: Input failed validation
    ExceptionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnownExceptionInfo'
      description: Exception occurred; see message for details.
  schemas:
    WorkspaceId:
      format: uuid
      type: string
    CustomerId:
      format: uuid
      type: string
    WorkspaceCreate:
      example:
        news: true
        displaySetupWizard: true
        anonymousDataCollection: true
        name: name
        email: email
        securityUpdates: true
        notifications:
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
      properties:
        email:
          format: email
          type: string
        anonymousDataCollection:
          type: boolean
        name:
          type: string
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        displaySetupWizard:
          type: boolean
      required:
      - name
      type: object
    Notification:
      example:
        slackConfiguration:
          webhook: webhook
        sendOnSuccess: false
        sendOnFailure: true
      properties:
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        sendOnSuccess:
          default: false
          type: boolean
        sendOnFailure:
          default: true
          type: boolean
        slackConfiguration:
          $ref: '#/components/schemas/SlackNotificationConfiguration'
      required:
      - notificationType
      - sendOnFailure
      - sendOnSuccess
      type: object
    SlackNotificationConfiguration:
      example:
        webhook: webhook
      properties:
        webhook:
          type: string
      required:
      - webhook
      type: object
    NotificationType:
      enum:
      - slack
      type: string
    NotificationRead:
      example:
        message: message
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        message:
          type: string
      required:
      - status
      type: object
    WorkspaceIdRequestBody:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
      required:
      - workspaceId
      type: object
    WorkspaceReadList:
      example:
        workspaces:
        - news: true
          displaySetupWizard: true
          initialSetupComplete: true
          anonymousDataCollection: true
          customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          firstCompletedSync: true
          feedbackDone: true
          email: email
          slug: slug
          securityUpdates: true
          notifications:
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - news: true
          displaySetupWizard: true
          initialSetupComplete: true
          anonymousDataCollection: true
          customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          firstCompletedSync: true
          feedbackDone: true
          email: email
          slug: slug
          securityUpdates: true
          notifications:
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaces:
          items:
            $ref: '#/components/schemas/WorkspaceRead'
          type: array
      required:
      - workspaces
      type: object
    WorkspaceRead:
      example:
        news: true
        displaySetupWizard: true
        initialSetupComplete: true
        anonymousDataCollection: true
        customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        firstCompletedSync: true
        feedbackDone: true
        email: email
        slug: slug
        securityUpdates: true
        notifications:
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        customerId:
          format: uuid
          type: string
        email:
          format: email
          type: string
        name:
          type: string
        slug:
          type: string
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        anonymousDataCollection:
          type: boolean
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        firstCompletedSync:
          type: boolean
        feedbackDone:
          type: boolean
      required:
      - customerId
      - initialSetupComplete
      - name
      - slug
      - workspaceId
      type: object
    WorkspaceUpdateName:
      example:
        name: name
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
      required:
      - name
      - workspaceId
      type: object
    WorkspaceUpdate:
      example:
        displaySetupWizard: true
        news: true
        initialSetupComplete: true
        anonymousDataCollection: true
        email: email
        securityUpdates: true
        notifications:
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        email:
          format: email
          type: string
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        anonymousDataCollection:
          type: boolean
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
      required:
      - anonymousDataCollection
      - initialSetupComplete
      - news
      - securityUpdates
      - workspaceId
      type: object
    WorkspaceGiveFeedback:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
      required:
      - workspaceId
      type: object
    SlugRequestBody:
      example:
        slug: slug
      properties:
        slug:
          type: string
      required:
      - slug
      type: object
    SourceDefinitionId:
      format: uuid
      type: string
    SourceDefinitionIdRequestBody:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
      required:
      - sourceDefinitionId
      type: object
    SourceDefinitionCreate:
      example:
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        dockerRepository: dockerRepository
        name: name
        icon: icon
      properties:
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
      required:
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      type: object
    SourceDefinitionUpdate:
      description: Update the SourceDefinition. Currently, the only allowed attribute
        to update is the default docker image version.
      example:
        dockerImageTag: dockerImageTag
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        dockerImageTag:
          type: string
      required:
      - dockerImageTag
      - sourceDefinitionId
      type: object
    SourceDefinitionRead:
      example:
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        releaseDate: 2000-01-23
        dockerRepository: dockerRepository
        name: name
        icon: icon
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        releaseDate:
          description: The date when this connector was first released, in yyyy-mm-dd
            format.
          format: date
          type: string
      required:
      - dockerImageTag
      - dockerRepository
      - name
      - sourceDefinitionId
      type: object
    SourceDefinitionReadList:
      example:
        sourceDefinitions:
        - documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitions:
          items:
            $ref: '#/components/schemas/SourceDefinitionRead'
          type: array
      required:
      - sourceDefinitions
      type: object
    SourceDefinitionSpecification:
      description: The specification for what values are required to configure the
        sourceDefinition.
      example:
        user:
          type: string
      type: object
    SourceAuthSpecification:
      $ref: '#/components/schemas/AuthSpecification'
    AuthSpecification:
      example:
        auth_type: oauth2.0
        oauth2Specification:
          oauthFlowOutputParameters:
          - - oauthFlowOutputParameters
            - oauthFlowOutputParameters
          - - oauthFlowOutputParameters
            - oauthFlowOutputParameters
          rootObject:
          - path
          - 1
          oauthFlowInitParameters:
          - - oauthFlowInitParameters
            - oauthFlowInitParameters
          - - oauthFlowInitParameters
            - oauthFlowInitParameters
      properties:
        auth_type:
          enum:
          - oauth2.0
          type: string
        oauth2Specification:
          $ref: '#/components/schemas/OAuth2Specification'
      type: object
    OAuth2Specification:
      description: An object containing any metadata needed to describe this connector's
        Oauth flow
      example:
        oauthFlowOutputParameters:
        - - oauthFlowOutputParameters
          - oauthFlowOutputParameters
        - - oauthFlowOutputParameters
          - oauthFlowOutputParameters
        rootObject:
        - path
        - 1
        oauthFlowInitParameters:
        - - oauthFlowInitParameters
          - oauthFlowInitParameters
        - - oauthFlowInitParameters
          - oauthFlowInitParameters
      properties:
        rootObject:
          description: "A list of strings representing a pointer to the root object\
            \ which contains any oauth parameters in the ConnectorSpecification.\n\
            Examples:\nif oauth parameters were contained inside the top level, rootObject=[]\
            \ If they were nested inside another object {'credentials': {'app_id'\
            \ etc...}, rootObject=['credentials'] If they were inside a oneOf {'switch':\
            \ {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch',\
            \ 0] "
          example:
          - path
          - 1
          items: {}
          type: array
        oauthFlowInitParameters:
          description: Pointers to the fields in the rootObject needed to obtain the
            initial refresh/access tokens for the OAuth flow. Each inner array represents
            the path in the rootObject of the referenced field. For example. Assume
            the rootObject contains params 'app_secret', 'app_id' which are needed
            to get the initial refresh token. If they are not nested in the rootObject,
            then the array would look like this [['app_secret'], ['app_id']] If they
            are nested inside an object called 'auth_params' then this array would
            be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]
          items:
            description: A list of strings denoting a pointer into the rootObject
              for where to find this property
            items:
              type: string
            type: array
          type: array
        oauthFlowOutputParameters:
          description: Pointers to the fields in the rootObject which can be populated
            from successfully completing the oauth flow using the init parameters.
            This is typically a refresh/access token. Each inner array represents
            the path in the rootObject of the referenced field.
          items:
            description: A list of strings denoting a pointer into the rootObject
              for where to find this property
            items:
              type: string
            type: array
          type: array
      required:
      - oauthFlowInitParameters
      - oauthFlowOutputParameters
      - rootObject
      type: object
    SourceDefinitionSpecificationRead:
      example:
        documentationUrl: documentationUrl
        connectionSpecification:
          user:
            type: string
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        advancedAuth:
          predicateValue: predicateValue
          oauthConfigSpecification:
            completeOAuthServerOutputSpecification: ""
            completeOAuthServerInputSpecification: ""
            completeOAuthOutputSpecification: ""
            oauthUserInputFromConnectorConfigSpecification: ""
          predicateKey:
          - predicateKey
          - predicateKey
          authFlowType: oauth2.0
        authSpecification:
          auth_type: oauth2.0
          oauth2Specification:
            oauthFlowOutputParameters:
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            rootObject:
            - path
            - 1
            oauthFlowInitParameters:
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
        jobInfo:
          createdAt: 0
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        documentationUrl:
          type: string
        connectionSpecification:
          description: The specification for what values are required to configure
            the sourceDefinition.
          example:
            user:
              type: string
          type: object
        authSpecification:
          $ref: '#/components/schemas/AuthSpecification'
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
      required:
      - jobInfo
      - sourceDefinitionId
      type: object
    SourceId:
      format: uuid
      type: string
    SourceIdRequestBody:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceId:
          format: uuid
          type: string
      required:
      - sourceId
      type: object
    SourceConfiguration:
      description: The values required to configure the source. The schema for this
        must match the schema return by source_definition_specifications/get for the
        source.
      example:
        user: charles
    SourceCoreConfig:
      example:
        connectionConfiguration:
          user: charles
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
      required:
      - connectionConfiguration
      - sourceDefinitionId
      type: object
    SourceCreate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceDefinitionId
      - workspaceId
      type: object
    SourceUpdate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
      properties:
        sourceId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
        name:
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceId
      type: object
    SourceRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        sourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
        name:
          type: string
        sourceName:
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceDefinitionId
      - sourceId
      - sourceName
      - workspaceId
      type: object
    SourceReadList:
      example:
        sources:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sources:
          items:
            $ref: '#/components/schemas/SourceRead'
          type: array
      required:
      - sources
      type: object
    SourceDiscoverSchemaRead:
      description: Returns the results of a discover catalog job. If the job was not
        successful, the catalog field will not be present. jobInfo will aways be present
        and its status be used to determine if the job was successful or not.
      example:
        catalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        jobInfo:
          createdAt: 0
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
      required:
      - jobInfo
      type: object
    SourceSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        sourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
        name:
          type: string
        sourceName:
          type: string
      type: object
    DestinationDefinitionId:
      format: uuid
      type: string
    DestinationAuthSpecification:
      $ref: '#/components/schemas/AuthSpecification'
    DestinationDefinitionIdRequestBody:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
      required:
      - destinationDefinitionId
      type: object
    DestinationDefinitionCreate:
      example:
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        dockerRepository: dockerRepository
        name: name
        icon: icon
      properties:
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
      required:
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      type: object
    DestinationDefinitionUpdate:
      example:
        dockerImageTag: dockerImageTag
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        dockerImageTag:
          type: string
      required:
      - destinationDefinitionId
      - dockerImageag
      type: object
    DestinationDefinitionRead:
      example:
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        releaseDate: 2000-01-23
        dockerRepository: dockerRepository
        name: name
        icon: icon
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        releaseDate:
          description: The date when this connector was first released, in yyyy-mm-dd
            format.
          format: date
          type: string
      required:
      - destinationDefinitionId
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      type: object
    DestinationDefinitionReadList:
      example:
        destinationDefinitions:
        - documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitions:
          items:
            $ref: '#/components/schemas/DestinationDefinitionRead'
          type: array
      required:
      - destinationDefinitions
      type: object
    DestinationDefinitionSpecification:
      description: The specification for what values are required to configure the
        destinationDefinition.
      example:
        user:
          type: string
    DestinationDefinitionSpecificationRead:
      example:
        documentationUrl: documentationUrl
        supportsNormalization: true
        connectionSpecification:
          user:
            type: string
        supportedDestinationSyncModes:
        - null
        - null
        supportsDbt: true
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        advancedAuth:
          predicateValue: predicateValue
          oauthConfigSpecification:
            completeOAuthServerOutputSpecification: ""
            completeOAuthServerInputSpecification: ""
            completeOAuthOutputSpecification: ""
            oauthUserInputFromConnectorConfigSpecification: ""
          predicateKey:
          - predicateKey
          - predicateKey
          authFlowType: oauth2.0
        authSpecification:
          auth_type: oauth2.0
          oauth2Specification:
            oauthFlowOutputParameters:
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            rootObject:
            - path
            - 1
            oauthFlowInitParameters:
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
        jobInfo:
          createdAt: 0
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        documentationUrl:
          type: string
        connectionSpecification:
          description: The specification for what values are required to configure
            the destinationDefinition.
          example:
            user:
              type: string
        authSpecification:
          $ref: '#/components/schemas/AuthSpecification'
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        supportedDestinationSyncModes:
          items:
            $ref: '#/components/schemas/DestinationSyncMode'
          type: array
        supportsDbt:
          type: boolean
        supportsNormalization:
          type: boolean
      required:
      - destinationDefinitionId
      - jobInfo
      type: object
    DestinationId:
      format: uuid
      type: string
    DestinationIdRequestBody:
      example:
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          type: string
      required:
      - destinationId
      type: object
    DestinationConfiguration:
      description: The values required to configure the destination. The schema for
        this must match the schema return by destination_definition_specifications/get
        for the destinationDefinition.
      example:
        user: charles
    DestinationCoreConfig:
      example:
        connectionConfiguration:
          user: charles
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - workspaceId
      type: object
    DestinationCreate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
        destinationDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - name
      - workspaceId
      type: object
    DestinationUpdate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
        name:
          type: string
      required:
      - connectionConfiguration
      - destinationId
      - name
      type: object
    DestinationRead:
      example:
        connectionConfiguration:
          user: charles
        destinationName: destinationName
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
        name:
          type: string
        destinationName:
          type: string
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - destinationId
      - destinationName
      - name
      - workspaceId
      type: object
    DestinationReadList:
      example:
        destinations:
        - connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinations:
          items:
            $ref: '#/components/schemas/DestinationRead'
          type: array
      required:
      - destinations
      type: object
    DestinationSearch:
      example:
        connectionConfiguration:
          user: charles
        destinationName: destinationName
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
        name:
          type: string
        destinationName:
          type: string
      type: object
    ReleaseStage:
      enum:
      - alpha
      - beta
      - generally_available
      - custom
      type: string
    ConnectionId:
      format: uuid
      type: string
    ConnectionIdRequestBody:
      example:
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          type: string
      required:
      - connectionId
      type: object
    DbMigrationRequestBody:
      example:
        database: database
      properties:
        database:
          type: string
      required:
      - database
      type: object
    WebBackendConnectionRequestBody:
      example:
        withRefreshedCatalog: true
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        withRefreshedCatalog:
          type: boolean
        connectionId:
          format: uuid
          type: string
      required:
      - connectionId
      type: object
    ConnectionCreate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        prefix: prefix
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        namespaceFormat: ${SOURCE_NAMESPACE}
        operationIds:
        - null
        - null
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Optional name of the connection
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - destinationId
      - sourceId
      - status
      type: object
    WebBackendConnectionCreate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        namespaceFormat: ${SOURCE_NAMESPACE}
        operationIds:
        - null
        - null
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Optional name of the connection
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        operations:
          items:
            $ref: '#/components/schemas/OperationCreate'
          type: array
      required:
      - connection
      - destinationId
      - sourceId
      - status
      type: object
    ConnectionUpdate:
      example:
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        prefix: prefix
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: ${SOURCE_NAMESPACE}
        operationIds:
        - null
        - null
      properties:
        connectionId:
          format: uuid
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - connectionId
      - status
      - syncCatalog
      type: object
    WebBackendConnectionUpdate:
      example:
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        withRefreshedCatalog: true
        prefix: prefix
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: ${SOURCE_NAMESPACE}
        operationIds:
        - null
        - null
      properties:
        connectionId:
          format: uuid
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        withRefreshedCatalog:
          type: boolean
        operations:
          items:
            $ref: '#/components/schemas/WebBackendOperationCreateOrUpdate'
          type: array
      required:
      - connectionId
      - status
      - syncCatalog
      type: object
    ConnectionRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule: ""
        prefix: prefix
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: ${SOURCE_NAMESPACE}
        operationIds:
        - null
        - null
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          allOf:
          - $ref: '#/components/schemas/ConnectionSchedule'
          nullable: true
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - connectionId
      - destinationId
      - name
      - sourceId
      - status
      - syncCatalog
      type: object
    ConnectionSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        schedule:
          units: 0
          timeUnit: minutes
        prefix: prefix
        name: name
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: ${SOURCE_NAMESPACE}
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        source:
          $ref: '#/components/schemas/SourceSearch'
        destination:
          $ref: '#/components/schemas/DestinationSearch'
      type: object
    WebBackendConnectionSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        schedule:
          units: 0
          timeUnit: minutes
        prefix: prefix
        name: name
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: ${SOURCE_NAMESPACE}
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        source:
          $ref: '#/components/schemas/SourceSearch'
        destination:
          $ref: '#/components/schemas/DestinationSearch'
      type: object
    ConnectionReadList:
      example:
        connections:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule: ""
          prefix: prefix
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: ${SOURCE_NAMESPACE}
          operationIds:
          - null
          - null
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule: ""
          prefix: prefix
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: ${SOURCE_NAMESPACE}
          operationIds:
          - null
          - null
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connections:
          items:
            $ref: '#/components/schemas/ConnectionRead'
          type: array
      required:
      - connections
      type: object
    ConnectionStatus:
      description: Active means that data is flowing through the connection. Inactive
        means it is not. Deprecated means the connection is off and cannot be re-activated.
        the schema field describes the elements of the schema that will be synced.
      enum:
      - active
      - inactive
      - deprecated
      type: string
    ConnectionSchedule:
      description: if null, then no schedule is set.
      example:
        units: 0
        timeUnit: minutes
      properties:
        units:
          format: int64
          type: integer
        timeUnit:
          enum:
          - minutes
          - hours
          - days
          - weeks
          - months
          type: string
      required:
      - timeUnit
      - units
      type: object
    NamespaceDefinitionType:
      default: source
      description: Method used for computing final namespace in destination
      enum:
      - source
      - destination
      - customformat
      type: string
    OperationId:
      format: uuid
      type: string
    OperationIdRequestBody:
      example:
        OperationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        OperationId:
          format: uuid
          type: string
      required:
      - OperationId
      type: object
    OperationCreate:
      example:
        name: name
        operatorConfiguration:
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operatorConfiguration
      - workspaceId
      type: object
    OperationUpdate:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
      properties:
        operationId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operationId
      - operatorConfiguration
      type: object
    WebBackendOperationCreateOrUpdate:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operationId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operatorConfiguration
      - workspaceId
      type: object
    OperationRead:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        operationId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operationId
      - operatorConfiguration
      - workspaceId
      type: object
    OperationReadList:
      example:
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operations:
          items:
            $ref: '#/components/schemas/OperationRead'
          type: array
      required:
      - operations
      type: object
    OperatorConfiguration:
      example:
        normalization:
          option: basic
        dbt:
          gitRepoBranch: gitRepoBranch
          dockerImage: dockerImage
          dbtArguments: dbtArguments
          gitRepoUrl: gitRepoUrl
      properties:
        operatorType:
          $ref: '#/components/schemas/OperatorType'
        normalization:
          $ref: '#/components/schemas/OperatorNormalization'
        dbt:
          $ref: '#/components/schemas/OperatorDbt'
      required:
      - operatorType
      type: object
    OperatorType:
      enum:
      - normalization
      - dbt
      type: string
    OperatorNormalization:
      example:
        option: basic
      properties:
        option:
          enum:
          - basic
          type: string
      type: object
    OperatorDbt:
      example:
        gitRepoBranch: gitRepoBranch
        dockerImage: dockerImage
        dbtArguments: dbtArguments
        gitRepoUrl: gitRepoUrl
      properties:
        gitRepoUrl:
          type: string
        gitRepoBranch:
          type: string
        dockerImage:
          type: string
        dbtArguments:
          type: string
      required:
      - gitRepoUrl
      type: object
    CheckOperationRead:
      example:
        message: message
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        message:
          type: string
      required:
      - status
      type: object
    LogType:
      description: type/source of logs produced
      enum:
      - server
      - scheduler
      type: string
    LogsRequestBody:
      example: {}
      properties:
        logType:
          $ref: '#/components/schemas/LogType'
      required:
      - logType
      type: object
    AirbyteCatalog:
      description: describes the available schema (catalog).
      example:
        streams:
        - stream:
            sourceDefinedPrimaryKey:
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            supportedSyncModes:
            - null
            - null
            sourceDefinedCursor: true
            jsonSchema: '{}'
            name: name
            namespace: namespace
            defaultCursorField:
            - defaultCursorField
            - defaultCursorField
          config:
            aliasName: aliasName
            cursorField:
            - cursorField
            - cursorField
            selected: true
            primaryKey:
            - - primaryKey
              - primaryKey
            - - primaryKey
              - primaryKey
        - stream:
            sourceDefinedPrimaryKey:
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            supportedSyncModes:
            - null
            - null
            sourceDefinedCursor: true
            jsonSchema: '{}'
            name: name
            namespace: namespace
            defaultCursorField:
            - defaultCursorField
            - defaultCursorField
          config:
            aliasName: aliasName
            cursorField:
            - cursorField
            - cursorField
            selected: true
            primaryKey:
            - - primaryKey
              - primaryKey
            - - primaryKey
              - primaryKey
      properties:
        streams:
          items:
            $ref: '#/components/schemas/AirbyteStreamAndConfiguration'
          type: array
      required:
      - streams
      type: object
    AirbyteStreamAndConfiguration:
      additionalProperties: false
      description: each stream is split in two parts; the immutable schema from source
        and mutable configuration for destination
      example:
        stream:
          sourceDefinedPrimaryKey:
          - - sourceDefinedPrimaryKey
            - sourceDefinedPrimaryKey
          - - sourceDefinedPrimaryKey
            - sourceDefinedPrimaryKey
          supportedSyncModes:
          - null
          - null
          sourceDefinedCursor: true
          jsonSchema: '{}'
          name: name
          namespace: namespace
          defaultCursorField:
          - defaultCursorField
          - defaultCursorField
        config:
          aliasName: aliasName
          cursorField:
          - cursorField
          - cursorField
          selected: true
          primaryKey:
          - - primaryKey
            - primaryKey
          - - primaryKey
            - primaryKey
      properties:
        stream:
          $ref: '#/components/schemas/AirbyteStream'
        config:
          $ref: '#/components/schemas/AirbyteStreamConfiguration'
      type: object
    AirbyteStream:
      additionalProperties: false
      description: the immutable schema defined by the source
      example:
        sourceDefinedPrimaryKey:
        - - sourceDefinedPrimaryKey
          - sourceDefinedPrimaryKey
        - - sourceDefinedPrimaryKey
          - sourceDefinedPrimaryKey
        supportedSyncModes:
        - null
        - null
        sourceDefinedCursor: true
        jsonSchema: '{}'
        name: name
        namespace: namespace
        defaultCursorField:
        - defaultCursorField
        - defaultCursorField
      properties:
        name:
          description: Stream's name.
          type: string
        jsonSchema:
          type: object
        supportedSyncModes:
          items:
            $ref: '#/components/schemas/SyncMode'
          type: array
        sourceDefinedCursor:
          description: If the source defines the cursor field, then any other cursor
            field inputs will be ignored. If it does not, either the user_provided
            one is used, or the default one is used as a backup.
          type: boolean
        defaultCursorField:
          description: Path to the field that will be used to determine if a record
            is new or modified since the last sync. If not provided by the source,
            the end user will have to specify the comparable themselves.
          items:
            type: string
          type: array
        sourceDefinedPrimaryKey:
          description: If the source defines the primary key, paths to the fields
            that will be used as a primary key. If not provided by the source, the
            end user will have to specify the primary key themselves.
          items:
            items:
              type: string
            type: array
          type: array
        namespace:
          description: Optional Source-defined namespace. Airbyte streams from the
            same sources should have the same namespace. Currently only used by JDBC
            destinations to determine what schema to write to.
          type: string
      required:
      - json_schema
      - name
      type: object
    StreamJsonSchema:
      type: object
    AirbyteStreamConfiguration:
      additionalProperties: false
      description: the mutable part of the stream to configure the destination
      example:
        aliasName: aliasName
        cursorField:
        - cursorField
        - cursorField
        selected: true
        primaryKey:
        - - primaryKey
          - primaryKey
        - - primaryKey
          - primaryKey
      properties:
        syncMode:
          $ref: '#/components/schemas/SyncMode'
        cursorField:
          description: Path to the field that will be used to determine if a record
            is new or modified since the last sync. This field is REQUIRED if `sync_mode`
            is `incremental`. Otherwise it is ignored.
          items:
            type: string
          type: array
        destinationSyncMode:
          $ref: '#/components/schemas/DestinationSyncMode'
        primaryKey:
          description: Paths to the fields that will be used as primary key. This
            field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it
            is ignored.
          items:
            items:
              type: string
            type: array
          type: array
        aliasName:
          description: Alias name to the stream to be used in the destination
          type: string
        selected:
          type: boolean
      required:
      - destinationSyncMode
      - syncMode
      type: object
    DataType:
      enum:
      - string
      - number
      - boolean
      - object
      - array
      type: string
    JobId:
      format: int64
      type: integer
    JobConfigType:
      enum:
      - check_connection_source
      - check_connection_destination
      - discover_schema
      - get_spec
      - sync
      - reset_connection
      type: string
    JobListRequestBody:
      example:
        pagination:
          rowOffset: 6
          pageSize: 0
        configTypes:
        - null
        - null
        configId: configId
      properties:
        configTypes:
          items:
            $ref: '#/components/schemas/JobConfigType'
          type: array
        configId:
          type: string
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - configId
      - configTypes
      type: object
    JobIdRequestBody:
      example:
        id: 0
      properties:
        id:
          format: int64
          type: integer
      required:
      - id
      type: object
    JobRead:
      example:
        createdAt: 6
        configId: configId
        id: 0
        updatedAt: 1
      properties:
        id:
          format: int64
          type: integer
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
      required:
      - configId
      - configType
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    JobDebugRead:
      example:
        configId: configId
        sourceDefinition:
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        airbyteVersion: airbyteVersion
        id: 0
        destinationDefinition:
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: int64
          type: integer
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        airbyteVersion:
          type: string
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
      required:
      - airbyteVersion
      - configId
      - configType
      - destinationDefinition
      - id
      - sourceDefinition
      - status
      type: object
    JobWithAttemptsRead:
      example:
        job:
          createdAt: 6
          configId: configId
          id: 0
          updatedAt: 1
        attempts:
        - totalStats:
            stateMessagesEmitted: 7
            recordsCommitted: 1
            bytesEmitted: 4
            recordsEmitted: 2
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              externalMessage: externalMessage
              timestamp: 1
            - retryable: true
              stacktrace: stacktrace
              externalMessage: externalMessage
              timestamp: 1
            partialSuccess: true
          createdAt: 5
          bytesSynced: 9
          endedAt: 7
          streamStats:
          - stats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            streamName: streamName
          - stats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            streamName: streamName
          id: 5
          recordsSynced: 3
          updatedAt: 2
        - totalStats:
            stateMessagesEmitted: 7
            recordsCommitted: 1
            bytesEmitted: 4
            recordsEmitted: 2
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              externalMessage: externalMessage
              timestamp: 1
            - retryable: true
              stacktrace: stacktrace
              externalMessage: externalMessage
              timestamp: 1
            partialSuccess: true
          createdAt: 5
          bytesSynced: 9
          endedAt: 7
          streamStats:
          - stats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            streamName: streamName
          - stats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            streamName: streamName
          id: 5
          recordsSynced: 3
          updatedAt: 2
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
        attempts:
          items:
            $ref: '#/components/schemas/AttemptRead'
          type: array
      type: object
    JobStatus:
      enum:
      - pending
      - running
      - incomplete
      - failed
      - succeeded
      - cancelled
      type: string
    AttemptRead:
      example:
        totalStats:
          stateMessagesEmitted: 7
          recordsCommitted: 1
          bytesEmitted: 4
          recordsEmitted: 2
        failureSummary:
          failures:
          - retryable: true
            stacktrace: stacktrace
            externalMessage: externalMessage
            timestamp: 1
          - retryable: true
            stacktrace: stacktrace
            externalMessage: externalMessage
            timestamp: 1
          partialSuccess: true
        createdAt: 5
        bytesSynced: 9
        endedAt: 7
        streamStats:
        - stats:
            stateMessagesEmitted: 7
            recordsCommitted: 1
            bytesEmitted: 4
            recordsEmitted: 2
          streamName: streamName
        - stats:
            stateMessagesEmitted: 7
            recordsCommitted: 1
            bytesEmitted: 4
            recordsEmitted: 2
          streamName: streamName
        id: 5
        recordsSynced: 3
        updatedAt: 2
      properties:
        id:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/AttemptStatus'
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
        endedAt:
          format: int64
          type: integer
        bytesSynced:
          format: int64
          type: integer
        recordsSynced:
          format: int64
          type: integer
        totalStats:
          $ref: '#/components/schemas/AttemptStats'
        streamStats:
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
          type: array
        failureSummary:
          $ref: '#/components/schemas/AttemptFailureSummary'
      required:
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    AttemptStats:
      example:
        stateMessagesEmitted: 7
        recordsCommitted: 1
        bytesEmitted: 4
        recordsEmitted: 2
      properties:
        recordsEmitted:
          format: int64
          type: integer
        bytesEmitted:
          format: int64
          type: integer
        stateMessagesEmitted:
          format: int64
          type: integer
        recordsCommitted:
          format: int64
          type: integer
      type: object
    AttemptStreamStats:
      example:
        stats:
          stateMessagesEmitted: 7
          recordsCommitted: 1
          bytesEmitted: 4
          recordsEmitted: 2
        streamName: streamName
      properties:
        streamName:
          type: string
        stats:
          $ref: '#/components/schemas/AttemptStats'
      required:
      - stats
      - streamName
      type: object
    AttemptFailureSummary:
      example:
        failures:
        - retryable: true
          stacktrace: stacktrace
          externalMessage: externalMessage
          timestamp: 1
        - retryable: true
          stacktrace: stacktrace
          externalMessage: externalMessage
          timestamp: 1
        partialSuccess: true
      properties:
        failures:
          items:
            $ref: '#/components/schemas/AttemptFailureReason'
          type: array
        partialSuccess:
          description: True if the number of committed records for this attempt was
            greater than 0. False if 0 records were committed. If not set, the number
            of committed records is unknown.
          type: boolean
      required:
      - failures
      type: object
    AttemptFailureReason:
      example:
        retryable: true
        stacktrace: stacktrace
        externalMessage: externalMessage
        timestamp: 1
      properties:
        failureOrigin:
          $ref: '#/components/schemas/AttemptFailureOrigin'
        failureType:
          $ref: '#/components/schemas/AttemptFailureType'
        externalMessage:
          type: string
        stacktrace:
          type: string
        retryable:
          description: True if it is known that retrying may succeed, e.g. for a transient
            failure. False if it is known that a retry will not succeed, e.g. for
            a configuration issue. If not set, retryable status is not well known.
          type: boolean
        timestamp:
          format: int64
          type: integer
      required:
      - timestamp
      type: object
    AttemptFailureOrigin:
      description: Indicates where the error originated. If not set, the origin of
        error is not well known.
      enum:
      - unknown
      - source
      - destination
      - replication
      - replication_worker
      - persistence
      - normalization
      - dbt
      type: string
    AttemptFailureType:
      description: Categorizes well known errors into types for programmatic handling.
        If not set, the type of error is not well known.
      enum:
      - unknown
      - config_error
      - system_error
      - manual_cancellation
      type: string
    AttemptStatus:
      enum:
      - running
      - failed
      - succeeded
      type: string
    JobReadList:
      example:
        jobs:
        - job:
            createdAt: 6
            configId: configId
            id: 0
            updatedAt: 1
          attempts:
          - totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
          - totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
        - job:
            createdAt: 6
            configId: configId
            id: 0
            updatedAt: 1
          attempts:
          - totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
          - totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/JobWithAttemptsRead'
          type: array
      required:
      - jobs
      type: object
    JobInfoRead:
      example:
        job:
          createdAt: 6
          configId: configId
          id: 0
          updatedAt: 1
        attempts:
        - attempt:
            totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
          logs:
            logLines:
            - logLines
            - logLines
        - attempt:
            totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
          logs:
            logLines:
            - logLines
            - logLines
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
        attempts:
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
          type: array
      required:
      - attempts
      - job
      type: object
    JobDebugInfoRead:
      example:
        job:
          configId: configId
          sourceDefinition:
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            name: name
            icon: icon
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          airbyteVersion: airbyteVersion
          id: 0
          destinationDefinition:
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            name: name
            icon: icon
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attempts:
        - attempt:
            totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
          logs:
            logLines:
            - logLines
            - logLines
        - attempt:
            totalStats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              - retryable: true
                stacktrace: stacktrace
                externalMessage: externalMessage
                timestamp: 1
              partialSuccess: true
            createdAt: 5
            bytesSynced: 9
            endedAt: 7
            streamStats:
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            - stats:
                stateMessagesEmitted: 7
                recordsCommitted: 1
                bytesEmitted: 4
                recordsEmitted: 2
              streamName: streamName
            id: 5
            recordsSynced: 3
            updatedAt: 2
          logs:
            logLines:
            - logLines
            - logLines
      properties:
        job:
          $ref: '#/components/schemas/JobDebugRead'
        attempts:
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
          type: array
      required:
      - attempts
      - job
      type: object
    AttemptInfoRead:
      example:
        attempt:
          totalStats:
            stateMessagesEmitted: 7
            recordsCommitted: 1
            bytesEmitted: 4
            recordsEmitted: 2
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              externalMessage: externalMessage
              timestamp: 1
            - retryable: true
              stacktrace: stacktrace
              externalMessage: externalMessage
              timestamp: 1
            partialSuccess: true
          createdAt: 5
          bytesSynced: 9
          endedAt: 7
          streamStats:
          - stats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            streamName: streamName
          - stats:
              stateMessagesEmitted: 7
              recordsCommitted: 1
              bytesEmitted: 4
              recordsEmitted: 2
            streamName: streamName
          id: 5
          recordsSynced: 3
          updatedAt: 2
        logs:
          logLines:
          - logLines
          - logLines
      properties:
        attempt:
          $ref: '#/components/schemas/AttemptRead'
        logs:
          $ref: '#/components/schemas/LogRead'
      required:
      - attempt
      - logs
      type: object
    LogRead:
      example:
        logLines:
        - logLines
        - logLines
      properties:
        logLines:
          items:
            type: string
          type: array
      required:
      - logLines
      type: object
    SynchronousJobRead:
      example:
        createdAt: 0
        configId: configId
        endedAt: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        logs:
          logLines:
          - logLines
          - logLines
        succeeded: true
      properties:
        id:
          format: uuid
          type: string
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          description: only present if a config id was provided.
          type: string
        createdAt:
          format: int64
          type: integer
        endedAt:
          format: int64
          type: integer
        succeeded:
          type: boolean
        logs:
          $ref: '#/components/schemas/LogRead'
      required:
      - configType
      - createdAt
      - endedAt
      - id
      - succeeded
      type: object
    Pagination:
      example:
        rowOffset: 6
        pageSize: 0
      properties:
        pageSize:
          type: integer
        rowOffset:
          type: integer
      type: object
    HealthCheckRead:
      example:
        available: true
      properties:
        available:
          type: boolean
      required:
      - available
      type: object
    CheckConnectionRead:
      example:
        message: message
        jobInfo:
          createdAt: 0
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        message:
          type: string
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
      required:
      - jobInfo
      - status
      type: object
    ConnectionState:
      example:
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: '{}'
      properties:
        connectionId:
          format: uuid
          type: string
        state:
          type: object
      required:
      - connectionId
      type: object
    ConnectionStateObject:
      type: object
    ResourceRequirements:
      description: optional resource requirements to run workers (blank for unbounded
        allocations)
      example:
        cpu_limit: cpu_limit
        memory_request: memory_request
        memory_limit: memory_limit
        cpu_request: cpu_request
      properties:
        cpu_request:
          type: string
        cpu_limit:
          type: string
        memory_request:
          type: string
        memory_limit:
          type: string
      type: object
    DbMigrationState:
      enum:
      - pending
      - above_target
      - below_baseline
      - baseline
      - ignored
      - missing_success
      - missing_failed
      - success
      - undone
      - available
      - failed
      - out_of_order
      - future_success
      - future_failed
      - outdated
      - superseded
      - deleted
      type: string
    DbMigrationRead:
      example:
        migrationVersion: migrationVersion
        migrationDescription: migrationDescription
        migratedAt: 0
        migrationType: migrationType
        migrationScript: migrationScript
        migratedBy: migratedBy
      properties:
        migrationType:
          type: string
        migrationVersion:
          type: string
        migrationDescription:
          type: string
        migrationState:
          $ref: '#/components/schemas/DbMigrationState'
        migratedBy:
          type: string
        migratedAt:
          format: int64
          type: integer
        migrationScript:
          type: string
      required:
      - migrationDescription
      - migrationType
      - migrationVersion
      type: object
    DbMigrationReadList:
      example:
        migrations:
        - migrationVersion: migrationVersion
          migrationDescription: migrationDescription
          migratedAt: 0
          migrationType: migrationType
          migrationScript: migrationScript
          migratedBy: migratedBy
        - migrationVersion: migrationVersion
          migrationDescription: migrationDescription
          migratedAt: 0
          migrationType: migrationType
          migrationScript: migrationScript
          migratedBy: migratedBy
      properties:
        migrations:
          items:
            $ref: '#/components/schemas/DbMigrationRead'
          type: array
      type: object
    DbMigrationExecutionRead:
      example:
        initialVersion: initialVersion
        executedMigrations:
        - migrationVersion: migrationVersion
          migrationDescription: migrationDescription
          migratedAt: 0
          migrationType: migrationType
          migrationScript: migrationScript
          migratedBy: migratedBy
        - migrationVersion: migrationVersion
          migrationDescription: migrationDescription
          migratedAt: 0
          migrationType: migrationType
          migrationScript: migrationScript
          migratedBy: migratedBy
        targetVersion: targetVersion
      properties:
        initialVersion:
          type: string
        targetVersion:
          type: string
        executedMigrations:
          items:
            $ref: '#/components/schemas/DbMigrationRead'
          type: array
      type: object
    OAuthConfiguration:
      description: OAuth specific blob.
    OAuthInputConfiguration:
      $ref: '#/components/schemas/OAuthConfiguration'
    AdvancedAuth:
      example:
        predicateValue: predicateValue
        oauthConfigSpecification:
          completeOAuthServerOutputSpecification: ""
          completeOAuthServerInputSpecification: ""
          completeOAuthOutputSpecification: ""
          oauthUserInputFromConnectorConfigSpecification: ""
        predicateKey:
        - predicateKey
        - predicateKey
        authFlowType: oauth2.0
      properties:
        authFlowType:
          enum:
          - oauth2.0
          - oauth1.0
          type: string
        predicateKey:
          description: Json Path to a field in the connectorSpecification that should
            exist for the advanced auth to be applicable.
          items:
            type: string
          type: array
        predicateValue:
          description: Value of the predicate_key fields for the advanced auth to
            be applicable.
          type: string
        oauthConfigSpecification:
          $ref: '#/components/schemas/OAuthConfigSpecification'
      type: object
    OAuthConfigSpecification:
      example:
        completeOAuthServerOutputSpecification: ""
        completeOAuthServerInputSpecification: ""
        completeOAuthOutputSpecification: ""
        oauthUserInputFromConnectorConfigSpecification: ""
      properties:
        oauthUserInputFromConnectorConfigSpecification:
          description: OAuth specific blob.
        completeOAuthOutputSpecification:
          description: OAuth specific blob.
        completeOAuthServerInputSpecification:
          description: OAuth specific blob.
        completeOAuthServerOutputSpecification:
          description: OAuth specific blob.
      type: object
    SourceOauthConsentRequest:
      example:
        redirectUrl: redirectUrl
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: The url to redirect to after getting the user consent
          type: string
        oAuthInputConfiguration:
          description: OAuth specific blob.
      required:
      - redirectUrl
      - sourceDefinitionId
      - workspaceId
      type: object
    DestinationOauthConsentRequest:
      example:
        redirectUrl: redirectUrl
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: The url to redirect to after getting the user consent
          type: string
        oAuthInputConfiguration:
          description: OAuth specific blob.
      required:
      - destinationDefinitionId
      - redirectUrl
      - workspaceId
      type: object
    OAuthConsentRead:
      example:
        consentUrl: consentUrl
      properties:
        consentUrl:
          type: string
      required:
      - consentUrl
      type: object
    CompleteSourceOauthRequest:
      example:
        redirectUrl: redirectUrl
        queryParams:
          key: '{}'
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: When completing OAuth flow to gain an access token, some API
            sometimes requires to verify that the app re-send the redirectUrl that
            was used when consent was given.
          type: string
        queryParams:
          additionalProperties: true
          description: The query parameters present in the redirect URL after a user
            granted consent e.g auth code
          type: object
        oAuthInputConfiguration:
          description: OAuth specific blob.
      required:
      - sourceDefinitionId
      - workspaceId
      type: object
    CompleteDestinationOAuthRequest:
      example:
        redirectUrl: redirectUrl
        queryParams:
          key: '{}'
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: When completing OAuth flow to gain an access token, some API
            sometimes requires to verify that the app re-send the redirectUrl that
            was used when consent was given.
          type: string
        queryParams:
          additionalProperties: true
          description: The query parameters present in the redirect URL after a user
            granted consent e.g auth code
          type: object
        oAuthInputConfiguration:
          description: OAuth specific blob.
      required:
      - destinationDefinitionId
      - workspaceId
      type: object
    CompleteOAuthResponse:
      additionalProperties: true
      type: object
    SetInstancewideSourceOauthParamsRequestBody:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params:
          key: '{}'
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        params:
          additionalProperties: true
          type: object
      required:
      - params
      - sourceDefinitionId
      type: object
    SetInstancewideDestinationOauthParamsRequestBody:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params:
          key: '{}'
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        params:
          additionalProperties: true
          type: object
      required:
      - destinationDefinitionId
      - params
      type: object
    WebBackendConnectionRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        latestSyncJobCreatedAt: 0
        prefix: prefix
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isSyncing: true
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: '{}'
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: ${SOURCE_NAMESPACE}
        operationIds:
        - null
        - null
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          default: "null"
          description: Used when namespaceDefinition is 'customformat'. If blank then
            behaves like namespaceDefinition = 'destination'. If "${SOURCE_NAMESPACE}"
            then behaves like namespaceDefinition = 'source'.
          example: ${SOURCE_NAMESPACE}
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        source:
          $ref: '#/components/schemas/SourceRead'
        destination:
          $ref: '#/components/schemas/DestinationRead'
        operations:
          items:
            $ref: '#/components/schemas/OperationRead'
          type: array
        latestSyncJobCreatedAt:
          description: epoch time of the latest sync job. null if no sync job has
            taken place.
          format: int64
          type: integer
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        isSyncing:
          type: boolean
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - connectionId
      - destination
      - destinationId
      - isSyncing
      - name
      - source
      - sourceId
      - status
      - syncCatalog
      type: object
    WebBackendConnectionReadList:
      example:
        connections:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latestSyncJobCreatedAt: 0
          prefix: prefix
          destination:
            connectionConfiguration:
              user: charles
            destinationName: destinationName
            name: name
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isSyncing: true
          source:
            sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            connectionConfiguration:
              user: charles
            name: name
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sourceName: sourceName
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule:
            units: 0
            timeUnit: minutes
          operations:
          - name: name
            operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            operatorConfiguration:
              normalization:
                option: basic
              dbt:
                gitRepoBranch: gitRepoBranch
                dockerImage: dockerImage
                dbtArguments: dbtArguments
                gitRepoUrl: gitRepoUrl
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            operatorConfiguration:
              normalization:
                option: basic
              dbt:
                gitRepoBranch: gitRepoBranch
                dockerImage: dockerImage
                dbtArguments: dbtArguments
                gitRepoUrl: gitRepoUrl
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: ${SOURCE_NAMESPACE}
          operationIds:
          - null
          - null
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latestSyncJobCreatedAt: 0
          prefix: prefix
          destination:
            connectionConfiguration:
              user: charles
            destinationName: destinationName
            name: name
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isSyncing: true
          source:
            sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            connectionConfiguration:
              user: charles
            name: name
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sourceName: sourceName
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule:
            units: 0
            timeUnit: minutes
          operations:
          - name: name
            operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            operatorConfiguration:
              normalization:
                option: basic
              dbt:
                gitRepoBranch: gitRepoBranch
                dockerImage: dockerImage
                dbtArguments: dbtArguments
                gitRepoUrl: gitRepoUrl
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            operatorConfiguration:
              normalization:
                option: basic
              dbt:
                gitRepoBranch: gitRepoBranch
                dockerImage: dockerImage
                dbtArguments: dbtArguments
                gitRepoUrl: gitRepoUrl
            workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: '{}'
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: ${SOURCE_NAMESPACE}
          operationIds:
          - null
          - null
      properties:
        connections:
          items:
            $ref: '#/components/schemas/WebBackendConnectionRead'
          type: array
      required:
      - connections
      type: object
    SyncMode:
      enum:
      - full_refresh
      - incremental
      type: string
    DestinationSyncMode:
      enum:
      - append
      - overwrite
      - append_dedup
      type: string
    AirbyteArchive:
      description: Tarball Archive (.tar.gz) of Airbyte Configuration and Database
      format: binary
      type: string
    ImportRead:
      example:
        reason: reason
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        reason:
          type: string
      required:
      - status
      type: object
    ResourceId:
      format: uuid
      type: string
    UploadRead:
      example:
        resourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        resourceId:
          format: uuid
          type: string
      required:
      - status
      type: object
    ImportRequestBody:
      example:
        resourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        resourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
      required:
      - resourceId
      - workspaceId
      type: object
    InvalidInputProperty:
      properties:
        propertyPath:
          type: string
        invalidValue:
          type: string
        message:
          type: string
      required:
      - propertyPath
      type: object
    NotFoundKnownExceptionInfo:
      properties:
        id:
          type: string
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          items:
            type: string
          type: array
        rootCauseExceptionClassName:
          type: string
        rootCauseExceptionStack:
          items:
            type: string
          type: array
      required:
      - message
      type: object
    KnownExceptionInfo:
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          items:
            type: string
          type: array
        rootCauseExceptionClassName:
          type: string
        rootCauseExceptionStack:
          items:
            type: string
          type: array
      required:
      - message
      type: object
    InvalidInputExceptionInfo:
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          items:
            type: string
          type: array
        validationErrors:
          items:
            $ref: '#/components/schemas/InvalidInputProperty'
          type: array
      required:
      - message
      - validationErrors
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
